name: Node CI

on:
  pull_request:
    branches:
      - main
  push:
    tags:
      - '*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ '18', '20', '22' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Setup NodeJS
        uses: actions/setup-node@v4.0.4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Dependencies Install
        run: npm ci
        env:
          CI: true
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Test
        run: npm run test
        env:
          CI: true
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Codecov
        if: matrix.node-version == '20'
        uses: codecov/codecov-action@v4.6.0
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  publish:
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    strategy:
      matrix:
        node-version: [ '20' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Setup NodeJS
        uses: actions/setup-node@v4.0.4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Dependencies Install
        run: npm ci
        env:
          CI: true
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Build
        run: npm run build:no-test:ci
        env:
          CI: true
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Pre-Publish - install package globally
        run: |
          FOR /F "tokens=*" %%g IN ('node -e "console.log(require(""./package.json"").version)"') do (SET VERSION=%%g)
          npm i -g fix-lockfile-integrity-%VERSION%.tgz
        shell: cmd
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Pre-Publish - test package globally
        run: |
          fix-lockfile-integrity
        shell: cmd
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Publish
        run: npm publish
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: fix-lockfile-integrity-*.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
